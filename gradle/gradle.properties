
# https://docs.gradle.org/current/userguide/build_environment.html

# Customize console output coloring or verbosity.
# Default depends on how Gradle is invoked.
# See command-line logging for additional details.
# https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_logging
# org.gradle.console=(auto,plain,rich,verbose)
#org.gradle.console = rich

# When set to true the Gradle Daemon is used to run the build.
# Default is true.
# https://docs.gradle.org/current/userguide/gradle_daemon.html#gradle_daemon
# org.gradle.debug=(true,false)
org.gradle.daemon = false

# Gradle Daemon will terminate itself after specified number of idle milliseconds.
# Default is 10800000 (3 hours).
# org.gradle.daemon.idletimeout=(# of idle millis)
org.gradle.daemon.idletimeout = 900000

# Specifies the Java home for the Gradle build process.
# The value can be set to either a jdk or jre location, however, depending on what your build does, using a JDK is safer.
# A reasonable default is derived from your environment (JAVA_HOME or the path to java) if the setting is unspecified.
# This does not affect the version of Java used to launch the Gradle client VM (see Environment variables).
# https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_environment_variables
# org.gradle.java.home=(path to JDK home)
#org.gradle.java.home = C:/Program Files/Java/jdk1.7.0_80
#org.gradle.java.home = C:/Program Files/Java/jdk1.8.0_202
#org.gradle.java.home = C:/Program Files/Java/jdk-10.0.2
#org.gradle.java.home = C:/Program Files/Java/jdk-11.0.2

# Specifies the JVM arguments used for the Gradle Daemon.
# The setting is particularly useful for configuring JVM memory settings for build performance.
# This does not affect the JVM settings for the Gradle client VM.
# https://docs.gradle.org/current/userguide/build_environment.html#sec:configuring_jvm_memory
# org.gradle.jvmargs=(JVM arguments)

# When set to quiet, warn, lifecycle, info, or debug, Gradle will use this log level.
# The values are not case sensitive.
# The lifecycle level is the default.
# See Choosing a log level.
# https://docs.gradle.org/current/userguide/logging.html#sec:choosing_a_log_level
# org.gradle.logging.level=(quiet,warn,lifecycle,info,debug)

# When configured, Gradle will fork up to org.gradle.workers.max JVMs to execute projects in parallel.
# To learn more about parallel task execution, see the Gradle performance guide.
# https://guides.gradle.org/performance/#parallel_execution
# org.gradle.parallel=(true,false)
#org.gradle.parallel = true

# When set to all, summary or none, Gradle will use different warning type display.
# See Command-line logging options for details.
# https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_logging
# org.gradle.warning.mode=(all,none,summary)
org.gradle.warning.mode = all

# When configured, Gradle will use a maximum of the given number of workers.
# Default is number of CPU processors.
# See also performance command-line options.
# https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_performance
# org.gradle.workers.max=(max # of worker processes)

# Specifies the scheduling priority for the Gradle daemon and all processes launched by it. Default is normal.
# See also performance command-line options.
# https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_performance
# org.gradle.priority=(low,normal)
org.gradle.priority = normal


# HTTP-Proxy
#systemProp.http.proxyHost=www.example.com
#systemProp.http.proxyPort=8000
#systemProp.http.proxyUser=username
#systemProp.http.proxyPassword=password
#systemProp.http.nonProxyHosts=
# HTTPS-Proxy
#systemProp.https.proxyHost=www.example.com
#systemProp.https.proxyPort=8000
#systemProp.https.proxyUser=username
#systemProp.https.proxyPassword=password
#systemProp.https.nonProxyHosts=

# TLS workaround for Java 7
#systemProp.https.protocols = TLSv1.2

