
# defines colours in constants
export COL_BLACK="\033[0;30m" #black
export COL_DGRAY="\033[1;90m" #black
export COL_RED="\033[0;31m" #red
export COL_LRED="\033[1;91m" #red
export COL_GREEN="\033[0;32m" #green
export COL_LGREEN="\033[1;92m" #green
export COL_BROWN="\033[0;33m" #yellow
export COL_YELLOW="\033[1;93m" #yellow
export COL_BLUE="\033[0;34m" #bluw
export COL_LBLUE="\033[1;94m" #blue
export COL_PURPLE="\033[0;35m" #pink
export COL_PINK="\033[1;95m" #pink
export COL_DCYAN="\033[0;36m" #cyan
export COL_CYAN="\033[1;96m" #cyan
export COL_WHITE="\033[0;37m" #white
export COL_LGRAY="\033[1;97m" #white
export COL_RESET="\033[0m"

print_my_colors() {
	echo COL_BLACK COL_DGRAY \
	COL_RED COL_LRED \
	COL_GREEN COL_LGREEN \
	COL_BROWN COL_YELLOW \
	COL_BLUE COL_LBLUE \
	COL_PURPLE COL_PINK \
	COL_DCYAN COL_CYAN \
	COL_WHITE COL_LGRAY \
	COL_RESET \
	| while read -d ' ' f; do
		printf "%s: ${!f}%s %s$COL_RESET\n" "$f" "$f" "${!f}";
	done
}

print_colors() {
	for attr in 0 1 4 5 7 ; do
		echo "----------------------------------------------------------------"
		printf "ESC[%s;Vordergrund;Hintergrundm - \n" $attr
		for fore in 30 31 32 33 34 35 36 37; do
			for back in 40 41 42 43 44 45 46 47; do
				printf '\033[%s;%s;%sm %02s;%02s  ' $attr $fore $back $fore $back
			done
		printf '\n'
		done
		printf '\033[0m'
	done
}
